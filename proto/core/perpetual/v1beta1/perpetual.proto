syntax = "proto3";
package core.perpetual.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/bank/v1beta1/bank.proto";

option go_package = "github.com/QuadrateOrg/core/x/perpetual/types";

enum PerpetualTradeType {
        PERPETUAL_LONG_POSITION = 0;
        PERPETUAL_SHORT_POSITION = 1;
}

message TradePosition {
        uint64 id = 1;
        string trade_position_id = 2;
        string creator = 3;
        PerpetualTradeType trade_type = 4;
        string leverage = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
        string trading_asset = 6;
        string collateral_amount = 7 [
                (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
                (gogoproto.nullable) = false
        ];
        string collateral_denom = 8;
        string take_profit_price = 9 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

message Vault {
        uint64 id = 1;
        string vault_id = 2;
        cosmos.bank.v1beta1.Metadata amountXMetadata = 3 [ (gogoproto.moretags) = "yaml:\"amountXMetadata\"", (gogoproto.nullable)   = false ];
        cosmos.bank.v1beta1.Metadata amountYMetadata = 4 [ (gogoproto.moretags) = "yaml:\"amountYMetadata\"", (gogoproto.nullable)   = false ];
        uint64 x = 5;
        uint64 y = 6;
        uint64 k = 7;
        string OracleAssetId = 8;
        repeated TradePosition long_position = 9 [(gogoproto.nullable) = false]; 
        repeated TradePosition short_position = 10 [(gogoproto.nullable) = false]; 
}